# Fixed values for observability-stack with proper storage configuration

# Values for kube-prometheus-stack
kubePrometheusStack:
  enabled: true
  
  # Prometheus configuration with WORKING storage
  prometheus:
    prometheusSpec:
      retention: 30d
      retentionSize: "50GB"
      
      # THIS IS THE FIX - Enable persistence
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: k8s-csi
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 100Gi
      
      # Resources
      resources:
        requests:
          memory: 2Gi
          cpu: 500m
        limits:
          memory: 4Gi
          cpu: 2
      
      # Service monitor selectors
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
  
  # Grafana configuration
  grafana:
    enabled: true
    
    # Admin credentials
    # IMPORTANT: The kube-prometheus-stack creates this secret on first install only
    # To retrieve current password: kubectl get secret <release>-grafana -n <namespace> -o jsonpath="{.data.admin-password}" | base64 -d
    # Default: "prom-operator" (kube-prometheus-stack default)
    adminPassword: "prom-operator"
    
    persistence:
      enabled: true
      type: pvc
      storageClassName: k8s-csi
      size: 10Gi
    
    grafana.ini:
      server:
        domain: grafana.observability-test.svc.cluster.local
        root_url: "%(protocol)s://%(domain)s/"
      analytics:
        check_for_updates: false
        reporting_enabled: false
    
    # Note: Loki datasource is automatically configured via a separate ConfigMap template
  
  # AlertManager configuration with WORKING storage
  alertmanager:
    enabled: true
    alertmanagerSpec:
      # THIS IS THE FIX - Correct path for alertmanager storage
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: k8s-csi
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
      
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 200m
          memory: 256Mi
  
  # Node exporter configuration
  nodeExporter:
    enabled: true
  
  # Kube state metrics configuration
  kubeStateMetrics:
    enabled: true

# Loki configuration
loki:
  enabled: true
  
  # Deployment mode - single binary for simplicity
  deploymentMode: SingleBinary
  
  loki:
    auth_enabled: false
    
    # Storage configuration - using filesystem for simplicity
    storage:
      type: filesystem
    
    # Common configuration
    commonConfig:
      replication_factor: 1
      path_prefix: /var/loki
    
    # Schema configuration
    schemaConfig:
      configs:
        - from: "2024-01-01"
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    
    # Storage configuration
    storage_config:
      filesystem:
        directory: /var/loki/chunks
      tsdb_shipper:
        active_index_directory: /var/loki/tsdb-index
        cache_location: /var/loki/tsdb-cache
    
    # Limits configuration
    limits_config:
      retention_period: 720h  # 30 days
      ingestion_rate_mb: 100
      ingestion_burst_size_mb: 200
      per_stream_rate_limit: 10MB
      per_stream_rate_limit_burst: 20MB
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    
    # Query configuration
    query_scheduler:
      max_outstanding_requests_per_tenant: 2048
    
    # Compactor configuration  
    compactor:
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 50
      delete_request_store: filesystem
  
  # Single binary configuration
  singleBinary:
    replicas: 1
    
    # Persistence for data
    persistence:
      enabled: true
      storageClass: k8s-csi
      size: 50Gi
    
    # Resources
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1
        memory: 1Gi
  
  # Gateway configuration (nginx) - disabled due to DNS issues
  gateway:
    enabled: false
    replicas: 0
  
  # Disable other deployment modes
  read:
    replicas: 0
  write:
    replicas: 0
  backend:
    replicas: 0
    
  # Monitoring
  monitoring:
    serviceMonitor:
      enabled: true
    
  # Test configuration
  test:
    enabled: false