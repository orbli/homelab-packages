Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }} in namespace {{ .Release.Namespace }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

{{- if .Values.kubePrometheusStack.enabled }}

## Prometheus Stack Components

### Prometheus
- Internal URL: http://{{ .Release.Name }}-kube-p-prometheus.{{ .Release.Namespace }}.svc.cluster.local:9090
- Retention: {{ .Values.kubePrometheusStack.prometheus.prometheusSpec.retention }}
- Storage: {{ .Values.kubePrometheusStack.prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage }}

### Grafana
- Internal URL: http://{{ .Release.Name }}-grafana.{{ .Release.Namespace }}.svc.cluster.local
- Admin username: admin
- Admin password: 
  {{- if and .Values.kubePrometheusStack.grafana.adminPassword (ne .Values.kubePrometheusStack.grafana.adminPassword "") }}
  {{ .Values.kubePrometheusStack.grafana.adminPassword }}
  {{- else }}
  kubectl get secret {{ .Release.Name }}-grafana-admin -n {{ .Release.Namespace }} -o jsonpath="{.data.admin-password}" | base64 -d
  {{- end }}
  
  ⚠️  Please change the admin password after first login!

### AlertManager
- Internal URL: http://{{ .Release.Name }}-kube-p-alertmanager.{{ .Release.Namespace }}.svc.cluster.local:9093
- Storage: {{ .Values.kubePrometheusStack.alertmanager.alertmanagerSpec.storage.volumeClaimTemplate.spec.resources.requests.storage }}

## Quick Verification

Check if all pods are running:
  kubectl get pods -n {{ .Release.Namespace }}

Access Grafana (port-forward):
  kubectl port-forward -n {{ .Release.Namespace }} svc/{{ .Release.Name }}-grafana 3000:80

Access Prometheus (port-forward):
  kubectl port-forward -n {{ .Release.Namespace }} svc/{{ .Release.Name }}-kube-p-prometheus 9090:9090

{{- end }}

{{- if .Values.loki.enabled }}

## Loki (Log Aggregation)

- Internal URL: http://{{ .Release.Name }}-loki-gateway.{{ .Release.Namespace }}.svc.cluster.local
- Storage: {{ .Values.loki.singleBinary.persistence.size }}
- Retention: {{ .Values.loki.loki.limits_config.retention_period }}
- Configured in Grafana: Yes (datasource auto-configured)

Access Loki via Grafana:
  1. Open Grafana UI
  2. Go to Explore
  3. Select "Loki" datasource
  4. Query logs with LogQL

{{- end }}

## Next Steps

1. Configure OAuth authentication for Grafana
2. Deploy log collectors (Alloy/Promtail) to ship logs to Loki
3. Add Tempo for distributed tracing
4. Set up custom dashboards and alerts
5. Configure retention policies

For more information, visit: https://github.com/orbli/homelab-packages